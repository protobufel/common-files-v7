/*
 * BSD 3-Clause License
 *
 * Copyright (c) 2017, David Tesler
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 *  Redistributions of source code must retain the above copyright notice, this
 *   list of conditions and the following disclaimer.
 *
 *  Redistributions in binary form must reproduce the above copyright notice,
 *   this list of conditions and the following disclaimer in the documentation
 *   and/or other materials provided with the distribution.
 *
 *  Neither the name of the copyright holder nor the names of its
 *   contributors may be used to endorse or promote products derived from
 *   this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 */

buildscript {
    repositories {
        jcenter()
        mavenCentral()
        //maven { url "http://oss.sonatype.org/content/repositories/snapshots/" }
    }
}

plugins {
    id 'java-library'
    id 'maven'
    id 'signing'

    id 'io.codearte.nexus-staging' version "0.9.0"
    id 'net.researchgate.release' version '2.6.0'

    //id 'eclipse'
    id "me.champeau.gradle.jmh" version "0.4.2"

    id 'jacoco'
}

//plugins.withType(EclipsePlugin) {
//  project.eclipse.classpath.plusConfigurations += [ configurations.jmh ]
//}

group = 'com.github.protobufel'
archivesBaseName = 'common-files-v7'
sourceCompatibility = 1.7
targetCompatibility = 1.7

if (project.hasProperty('ossrhUsername')) {
    uploadArchives {
        repositories {
            mavenDeployer {
                beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

                repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                    authentication(userName: ossrhUsername, password: ossrhPassword)
                }

                snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                    authentication(userName: ossrhUsername, password: ossrhPassword)
                }

                pom.project {
                    name 'common-files-v7'
                    packaging 'jar'
                    description 'Common file and directory scanning utilities'
                    url 'https://github.com/protobufel/common-files-v7'

                    scm {
                        connection 'scm:git:https://github.com/protobufel/common-files-v7.git'
                        developerConnection 'scm:git@github.com:protobufel/common-files-v7.git'
                        url 'https://github.com/protobufel/common-files-v7'
                    }

                    licenses {
                        license {
                            name 'The BSD 3-Clause License'
                            url 'http://opensource.org/licenses/BSD-3-Clause'
                        }
                    }

                    developers {
                        developer {
                            id 'protobufel'
                            name 'David Tesler'
                            email 'protobufel@gmail.com'
                        }
                    }
                }
            }
        }
    }

    nexusStaging {
        //packageGroup = "com.github.protobufel.multikeymapjava" //optional if packageGroup == project.getGroup()
        stagingProfileId = "com.github.protobufel" //when not defined will be got from server using "packageGroup"
    }

    task sourcesJar(type: Jar) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    signing {
        sign configurations.archives
    }

    task javadocJar(type: Jar) {
        classifier = 'javadoc'
        from javadoc
    }

    task copyJavadocToDoc(type: Sync, group: 'documentation') {
        from javadoc
        into("docs/javadoc")
    }

    artifacts {
        archives javadocJar, sourcesJar
    }

    preTagCommit.dependsOn copyJavadocToDoc

    release {
        preCommitText = ''
        preTagCommitMessage = 'pre tag commit: '
        tagCommitMessage = 'bumped to '
        newVersionCommitMessage = 'new version commit: '
//        tagTemplate = "${version}"
    }

    afterReleaseBuild.dependsOn uploadArchives
} else {
    test {
        testLogging {
            events "PASSED", "FAILED", "SKIPPED"
            exceptionFormat "short"

            debug {
                events "skipped", "failed"
                exceptionFormat "full"
            }

            info.events = ["failed", "skipped"]
        }
    }
}

jar {
    manifest {
        attributes('Implementation-Title': project.name,
                'Implementation-Version': project.version)
    }
}

repositories {
    jcenter()
    mavenCentral()
}

jmh {
    jmhVersion = '1.19' // Specifies JMH version
    includeTests = false
    // Allows to include test sources into generate JMH jar, i.e. use it when benchmarks depend on the test classes.
    duplicateClassesStrategy = 'FAIL'
    // Strategy to apply when encountring duplicate classes during creation of the fat jar (i.e. while executing jmhJar task)
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 0.5
            }
        }

        rule {
            enabled = false
            element = 'CLASS'
            includes = ['com.github.protobufel.*']

            limit {
                counter = 'LINE'
                value = 'TOTALCOUNT'
                maximum = 0.3
            }
        }
    }
}

jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled false
    }
}

check.dependsOn jacocoTestReport

dependencies {
    //api '...'
    api 'org.eclipse.jdt:org.eclipse.jdt.annotation:2.1.0'

    implementation 'com.github.protobufel:globs:0.6'
    implementation 'com.github.protobufel:common-verifications:0.6'
    implementation group: 'org.slf4j', name: 'slf4j-api', version:'1.7.7'

    testCompile group: 'ch.qos.logback', name: 'logback-classic', version:'1.1.2'
    testCompile group: 'junit', name: 'junit', version:'4.12'
    testCompile 'org.hamcrest:hamcrest-junit:2.0.0.0'
    testCompile 'org.mockito:mockito-core:2.8.47'
    testCompile group: 'nl.jqno.equalsverifier', name: 'equalsverifier', version:'1.5'
    testCompile group: 'com.google.guava', name: 'guava', version:'18.0'
    testCompile group: 'org.assertj', name: 'assertj-core', version:'[1.7.0, 2.0.0)'

    // Use JUnit test framework
//    testImplementation 'com.github.protobufel:java-common-test:0.1.0'
//    testImplementation 'junit:junit:4.12'
//    testImplementation 'org.assertj:assertj-core:3.8.0'
//    testImplementation 'com.google.guava:guava:22.0'
//    testImplementation 'com.google.guava:guava-testlib:22.0'
//    testImplementation 'pl.pragmatists:JUnitParams:1.1.0'
}